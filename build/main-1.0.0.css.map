{
  "version": 3,
  "file": "main-1.0.0.css",
  "sources": [
    "../src/App.html"
  ],
  "sourcesContent": [
    "<svelte:window bind:innerWidth bind:innerHeight/>\n\n<svg width=\"{innerWidth}\" height=\"{innerHeight}\" ref:svg on:mousemove='onMouseMove(event)'>\n  <Pythagoras\n    w=\"{baseW}\"\n    h=\"{baseW}\"\n    {heightFactor}\n    {lean}\n    x=\"{(innerWidth - baseW) / 2}\"\n    y=\"{innerHeight - baseW}\"\n    lvl=\"0\"\n    maxlvl=\"{currentMax}\"\n  />\n</svg>\n\n<script>\nimport { scaleLinear } from 'd3-scale'\nimport Pythagoras from './Pythagoras.html'\n\nfunction throttleWithRAF (fn) {\n  let running = false\n  return function () {\n    if (running) return\n    running = true\n    window.requestAnimationFrame(() => {\n      fn.apply(this, arguments)\n      running = false\n    })\n  }\n}\n\nconst realMax = 11;\n\nexport default {\n  components: { Pythagoras },\n\n  data () {\n    return {\n      currentMax: 0,\n      baseW: 80,\n      heightFactor: 0,\n      lean: 0\n    };\n  },\n\n  oncreate () {\n    const next = () => {\n      let currentMax = this.get('currentMax');\n      if (currentMax < realMax) {\n        currentMax += 1\n        this.set({currentMax});\n        setTimeout(next, 100)\n      }\n    };\n\n    next();\n  },\n\n  methods: {\n    onMouseMove (event) {\n      const { left, top } = this.refs.svg.getBoundingClientRect();\n      const x = event.clientX - left;\n      const y = event.clientY - top;\n      this.update(x, y);\n    },\n\n    update: throttleWithRAF(function (x, y) {\n      const { innerWidth, innerHeight } = this.get();\n      const scaleFactor = scaleLinear()\n        .domain([innerHeight, 0])\n        .range([0, 0.8])\n\n      const scaleLean = scaleLinear()\n        .domain([0, innerWidth / 2, innerWidth])\n        .range([0.5, 0, -0.5])\n\n      this.set({\n        heightFactor: scaleFactor(y),\n        lean: scaleLean(x)\n      });\n    })\n  }\n}\n</script>\n\n<style>\n  :global(body) {\n    margin: 0;\n    overflow: hidden;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAsFU,IAAI,AAAE,CAAC,AACb,MAAM,CAAE,CAAC,CACT,QAAQ,CAAE,MAAM,AAClB,CAAC"
}